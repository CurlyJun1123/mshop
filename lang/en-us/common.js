import login from './login'
import my from './my'

export default {
  // 底部选项卡
  tabBar: {
    home: 'index',
    category: 'category',
    cart: 'cart',
    member: 'member'
  },
  //公共
  common: {
    //语言包名称
    'zh-cn': 'Chinese',
    'en-us': 'English',
    mescrollTextInOffset: 'pull to refresh',
    mescrollTextOutOffset: 'Loading...',
    mescrollEmpty: 'No data available',
    goodsRecommendTitle: 'Guess you like',
    currencySymbol: '¥',
    tips: 'Tips',
    yuan: 'CNY',
    confirm: 'Confirm'
  },

  lang: 'Lang',

  ...login,
  ...my,

  apply: {
    agreement: {
      sign_agreement: 'Sign the Entry Agreement',
      agree_terms: 'I have read and agree to the above agreement',
      next_step: 'Next step, fill in the application information',
      agree_first: 'Please agree to the agreement first'
    }
  },

  index: {
    shop_expiring_soon: 'The store is about to expire, please renew it as soon as possible',
    shop_suspended: 'The store has suspended service and cannot operate normally',
    shop_expired: 'The store has expired, please renew it as soon as possible',
    shop_remaining: 'Remaining store',
    days_to_expire: 'days to expire',
    expired: 'Expired',
    certify_now: 'Authenticate now',
    renew_now: 'Renew now',
    not_certified: 'Not certified',
    certified: 'Certified',
    main_industry: 'Main industry:',
    shop_status: 'Store status:',
    normal: 'Normal',
    closed: 'Closed',
    expiration_time: 'Expiration time:',
    permanent: 'Permanent',
    data_overview: 'Data overview',
    today: 'Today',
    yesterday: 'Yesterday',
    total: 'Total',
    order_count: 'Order count',
    sales_amount: 'Sales amount (Yuan)',
    shop_favorites_count: 'Store favorites count',
    more: 'More',
    pending_payment: 'Pending payment',
    pending_shipment: 'Pending shipment',
    refunding: 'Refunding',
    pending_review: 'Pending review',
    violation_delisting: 'Violation delisting',
    product_release: 'Product release',
    order_query: 'Order query',
    financial_status: 'Financial status',
    transaction_analysis: 'Transaction analysis',
    store_settlement: 'Store settlement',
    member_management: 'Member management',
    contact_address: 'Contact address',
    all: 'All',
    '7_days': '7 days',
    '15_days': '15 days',
    '30_days': '30 days',
    sales_amount: 'Sales Amount',
    order_count: 'Order Count',
    yuan: 'Yuan',
    pieces: 'Pieces',
    multi_merchant_mobile_app: 'Multi-Merchant Mobile App',

    all_menu: {
      store_management: 'Store Management',
      product_release: 'Product Release',
      product_management: 'Product Management',
      order_management: 'Order Management',
      member_management: 'Member Management',
      financial_management: 'Financial Management',
      asset_overview: 'Asset Overview',
      withdrawal_record: 'Withdrawal Record',
      settlement_fee: 'Settlement Fee',
      store_settlement: 'Store Settlement',
      statistical_analysis: 'Statistical Analysis',
      transaction_statistics: 'Transaction Statistics',
      store_statistics: 'Store Statistics',
      product_statistics: 'Product Statistics',
      visit_statistics: 'Visit Statistics',
      store_settings: 'Store Settings',
      store_information: 'Store Information',
      user_management: 'User Management',
      contact_address: 'Contact Address',
      platform_announcements: 'Platform Announcements',
      verification_platform: 'Verification Platform',
      verification_personnel: 'Verification Personnel'
    }
  },

  order: {
    address: {
      receiver: 'Receiver',
      please_enter_receiver: 'Please enter receiver name',
      mobile_number: 'Mobile Number',
      please_enter_mobile: 'Please enter mobile number',
      shipping_address: 'Shipping Address',
      please_select: 'Please select',
      please_select_region: 'Please select province/city/district',
      detailed_address: 'Detailed Address',
      please_enter_address: 'Please enter detailed address',
      confirm: 'Confirm',
      data_error: 'Data error',
      location_auth_title: 'Location Authorization',
      location_auth_content: 'We need to access your location. Please authorize to use the map function',
      auth_success: 'Authorization successful',
      auth_failed: 'Authorization failed',
      please_enter_name: 'Please enter name',
      please_enter_valid_mobile: 'Please enter valid mobile number',
      please_select_area: 'Please select province/city/district',
      address_required: 'Detailed address is required'
    },

    adjust: {
      adjust_price_tips: 'Note: Price adjustment is only supported when the order is unpaid. After adjustment, please contact the buyer to refresh and verify the order amount before payment.',
      goods_info: 'Product Information',
      order_info: 'Order Information',
      subtotal: 'Subtotal',
      goods_total: 'Product Total',
      discount: 'Discount',
      coupon: 'Coupon',
      platform_coupon: 'Platform Coupon',
      balance: 'Balance',
      invoice_fee: 'Invoice Fee',
      invoice_delivery: 'Invoice Delivery',
      total: 'Total',
      adjust_price: 'Adjust Price',
      adjust_amount: 'Adjustment Amount',
      shipping_fee: 'Shipping Fee',
      actual_goods_amount: 'Actual Product Amount',
      discount_amount: 'Discount Amount',
      coupon_amount: 'Coupon Amount',
      platform_coupon_amount: 'Platform Coupon Amount',
      price_adjustment: 'Price Adjustment',
      invoice_rate: 'Invoice Rate',
      actual_payment: 'Actual Payment',
      invoice_delivery_fee: 'Invoice Delivery Fee',
      please_enter_adjust_amount: 'Please enter adjustment amount',
      adjust_amount_format_error: 'Invalid adjustment amount format',
      please_enter_shipping_fee: 'Please enter shipping fee',
      shipping_fee_format_error: 'Invalid shipping fee format'
    },

    delivery: {
      select_delivery_goods: 'Select Delivery Goods',
      tracking_number: 'Tracking Number',
      handle_refund: 'Handle Refund',
      fill_logistics_info: 'Fill Logistics Information',
      shipping_address: 'Shipping Address',
      delivery_method: 'Delivery Method',
      logistics_delivery: 'Logistics Delivery',
      no_logistics_needed: 'No Logistics Needed',
      logistics_company: 'Logistics Company',
      select_logistics_company: 'Please select logistics company',
      enter_tracking_number: 'Please enter tracking number',
      delivery_success: 'Delivery Successful'
    },

    logistics: {
      logistics_info: 'Fill in Logistics Information',
      shipping_address: 'Shipping Address',
      delivery_method: 'Delivery Method',
      logistics_delivery: 'Logistics Delivery',
      no_logistics: 'No Logistics Required',
      logistics_company: 'Logistics Company',
      select_logistics_company: 'Please Select Logistics Company',
      tracking_number: 'Tracking Number',
      enter_tracking_number: 'Please Enter Tracking Number',
      please_select_logistics_company: 'Please select logistics company',
      please_enter_tracking_number: 'Please enter tracking number',
      order_not_exist: 'Order information does not exist'
    },

    list: {
      orderList: 'Order List',
      refundAndRights: 'Refund & Rights',
      pleaseEnter: 'Please Enter',
      all: 'All',
      filter: 'Filter',
      searchMethod: 'Search Method',
      orderTime: 'Order Time',
      last7Days: 'Last 7 Days',
      last30Days: 'Last 30 Days',
      startTime: 'Start Time',
      endTime: 'End Time',
      orderType: 'Order Type',
      orderStatus: 'Order Status',
      marketingType: 'Marketing Type',
      paymentMethod: 'Payment Method',
      orderSource: 'Order Source',
      settlementStatus: 'Settlement Status',
      reset: 'Reset',
      confirm: 'Confirm',
      orderTime: 'Order Time',
      total: 'Total',
      sellerNote: 'Seller Note',
      remark: 'Remark',
      offlinePayment: 'Offline Payment',
      pickup: 'Pick Up',
      gift: 'Gift',
      noOrderData: 'No Order Data'
    }
  },

  property: {
    dashboard: {
      account_overview: 'Account Overview',
      shop_total_income: 'Shop Total Income(¥)',
      available_balance: 'Available Balance(¥)',
      withdraw: 'Withdraw',
      pending_settlement: 'Pending Settlement(¥)',
      view_details: 'View Details',
      entry_fee: 'Entry Fee(¥)',
      shop_deposit: 'Shop Deposit(¥)',
      withdrawn: 'Withdrawn(¥)',
      withdrawal_records: 'Withdrawal Records',
      withdrawing: 'Withdrawing(¥)',
      all: 'All',
      income: 'Income',
      expense: 'Expense',
      start_time: 'Start Time',
      end_time: 'End Time',
      income_source: 'Source',
      amount: 'Amount(¥)',
      transaction_type: 'Type',
      time: 'Time',
      description: 'Description',
      no_account_data: 'No Account Data',
      start_time_error: 'Start time cannot be greater than end time',

      orderlist: {
        transaction_amount: 'Transaction Amount',
        pending_settlement: 'Pending Settlement',
        in_progress: 'In Progress',
        settled: 'Settled',
        start_time: 'Start Time',
        end_time: 'End Time',
        order_status: 'Order Status:',
        order_amount: 'Order Amount',
        shop_refund_amount: 'Shop Refund Amount',
        platform_commission: 'Platform Commission',
        shop_amount: 'Shop Amount',
        completion_time: 'Completion Time',
        no_order_data: 'No Order Data',
        pending_settlement_orders: 'Pending Settlement Orders',
        in_progress_orders: 'In Progress Orders',
        settled_orders: 'Settled Orders',
        start_time_greater: 'Start time cannot be greater than end time'
      }
    },

    reopen: {
      detail: {
        shop_name: 'Shop Name',
        shop_package: 'Shop Package',
        renewal_duration: 'Renewal Duration',
        year: 'Year',
        payment_proof: 'Payment Proof',
        payment_proof_desc: 'Payment Proof Description'
      },

      list: {
        operation_tips: 'Operation Tips',
        expire_notice: 'Shop renewal can be applied within 30 days before expiration',
        payment_notice: 'Please verify the official payment account and contact customer service after uploading payment proof',
        main_business: 'Main Business',
        expire_time: 'Expiration Time',
        permanent: 'Permanent',
        view: 'View',
        renew_duration: 'Renewal Duration (Years)',
        payment_amount: 'Payment Amount (¥)',
        payment_proof: 'Payment Proof',
        status: 'Status',
        pending_review: 'Pending Review',
        review_failed: 'Review Failed',
        review_success: 'Review Success',
        time: 'Time',
        delete: 'Delete',
        edit: 'Edit',
        no_data: 'No renewal data',
        confirm_delete: 'Are you sure to delete this renewal application record?'
      }
    },

    settlement: {
      detail_store: {
        operation_tips: 'Operation Tips',
        account_period: 'Account Period',
        to: 'to',
        online_settlement: 'Online Settlement Amount',
        shop_total: 'Shop Total Amount',
        refund_amount: 'Refund Amount',
        commission_amount: 'Commission Amount',
        platform_coupon: 'Platform Coupon',
        platform_coupon_refund: 'Platform Coupon (Refund Part)',
        offline_settlement: 'Offline Settlement Amount',
        offline_order: 'Offline Order Amount',
        platform_deduction: 'Platform Deduction Amount',
        platform_total_deduction: 'Platform Total Deduction',
        platform_refund_deduction: 'Platform Refund Deduction',
        offline_payment: 'Offline Payment Amount',
        offline_refund: 'Offline Refund Amount',

        // List items
        payment_method: 'Payment Method',
        order_sales: 'Order Sales (¥)',
        order_refund: 'Order Refund (¥)',
        commission: 'Commission (¥)',
        platform_coupon_amount: 'Platform Coupon (¥)',
        platform_coupon_refund_amount: 'Platform Coupon Refund (¥)',
        store_income: 'Store Income (¥)',
        platform_commission: 'Platform Commission (¥)',
        order_complete_time: 'Order Complete Time',
        no_order_data: 'No Order Data'
      },

      detail: {
        operation_tips: 'Operation Tips',
        shop_income_formula: 'Shop Income = Total Settlement - Refund Amount - Commission + Platform Coupon Amount - Platform Refund Coupon Amount',
        platform_commission_formula: 'Platform Commission = Total Platform Commission - Platform Refund Commission',
        shop_settlement: 'Shop Settlement',
        shop_income_amount: 'Shop Income Amount',
        shop_total_settlement: 'Total Settlement Amount',
        shop_refund_amount: 'Shop Refund Amount',
        commission_amount: 'Commission Amount',
        platform_commission_amount: 'Platform Commission Amount',
        platform_total_commission: 'Total Platform Commission',
        platform_refund_commission: 'Platform Refund Commission',
        platform_coupon_amount: 'Platform Coupon Amount',
        platform_refund_coupon_amount: 'Platform Refund Coupon Amount',
        order_sales: 'Order Sales (¥)',
        order_refund: 'Order Refund (¥)',
        commission: 'Commission (¥)',
        platform_coupon: 'Platform Coupon (¥)',
        platform_refund_coupon: 'Platform Refund Coupon (¥)',
        shop_income: 'Shop Income (¥)',
        platform_commission: 'Platform Commission (¥)',
        order_complete_time: 'Order Complete Time',
        no_settlement_data: 'No settlement data available'
      },

      operationTip: 'Operation Tip',
      pageDescription: 'This page displays the settlement operations for all stores of the merchant.',
      detailsDescription: 'Merchants can view settlement details and operations here.',
      startTime: 'Start Time',
      endTime: 'End Time',
      view: 'View',
      storeSettlement: 'Store Settlement',
      totalOrderAmount: 'Total Order Amount',
      onlineSettlementAmount: 'Online Settlement Amount',
      offlineSettlementAmount: 'Offline Settlement Amount',
      settlementStartTime: 'Settlement Start Time',
      settlementEndTime: 'Settlement End Time',
      isSettled: 'Is Settled',
      settled: 'Settled',
      unsettled: 'Unsettled',
      settle: 'Settle',
      noSettlementData: 'No settlement data available for stores.',
      settlementRemarks: 'Settlement Remarks',
      remarksPlaceholder: 'Please enter settlement remarks',
      cancel: 'Cancel',
      confirm: 'Confirm',
      timeValidation: 'Start time cannot be greater than end time',

      operationTip: 'After the platform sets the store settlement cycle, the system will settle regularly according to the settings.',
      cycleDescription:
        'Settlement cycles are divided into daily, weekly, and monthly. Daily means starting at 0:00 every day, weekly means starting at 0:00 every Monday, and monthly means starting at 0:00 on the first day of each month.',
      storeAmount: 'Store Amount',
      platformCommission: 'Platform Commission',
      commissionAmount: 'Commission Amount',
      billingStartTime: 'Billing Start Time',
      billingEndTime: 'Billing End Time',
      noData: 'No store settlement data available.'
    },

    withdraw: {
      detail: {
        store_name: 'Store Name',
        contact_person: 'Contact Person',
        contact_phone: 'Contact Phone',
        account_type: 'Account Type',
        bank: 'Bank',
        wechat: 'WeChat',
        alipay: 'Alipay',
        account_name: 'Account Name',
        withdraw_account: 'Withdrawal Account',
        account_holder: 'Account Holder',
        wechat_nickname: 'WeChat Nickname',
        wechat_id: 'WeChat ID',
        alipay_username: 'Alipay Username',
        alipay_account: 'Alipay Account',
        withdraw_amount: 'Withdrawal Amount',
        yuan: 'Yuan',
        status: 'Status',
        pending_review: 'Pending Review',
        pending_transfer: 'Pending Transfer',
        transferred: 'Transferred',
        rejected: 'Rejected',
        apply_time: 'Application Time',
        transfer_time: 'Transfer Time',
        transfer_voucher: 'Transfer Voucher',
        voucher_description: 'Voucher Description',
        none: 'None',
        is_settlement_period: 'Settlement Period',
        yes: 'Yes',
        no: 'No',
        period_name: 'Period Name',
        remark: 'Remark'
      },

      index: {
        account_type: 'Withdrawal Account Type',
        bank_card: 'Bank Card',
        bank_account_name: 'Bank Account Name',
        bank_account_number: 'Bank Account Number',
        bank_branch_name: 'Bank Branch Name',
        bank_location: 'Bank Location',
        wechat: 'WeChat',
        wechat_nickname: 'WeChat Nickname',
        wechat_account: 'WeChat Account',
        alipay: 'Alipay',
        alipay_username: 'Alipay Username',
        alipay_account: 'Alipay Account',
        amount: 'Withdrawal Amount:',
        available_balance: 'Available Balance:',
        min_amount: 'Minimum Withdrawal:',
        max_amount: 'Maximum Withdrawal:',
        submit: 'Withdraw',
        please_enter_amount: 'Please enter withdrawal amount',
        exceed_available: 'Withdrawal amount exceeds available balance',
        less_than_min: 'Withdrawal amount is less than minimum',
        exceed_max: 'Withdrawal amount exceeds maximum limit',
        apply_success: 'Application successful, pending review'
      },

      list: {
        amount: 'Withdrawal Amount',
        withdrawn: 'Withdrawn (¥)',
        processing: 'Processing (¥)',
        apply: 'Apply',
        amount_yuan: 'Amount (¥)',
        account_type: 'Account Type',
        type_1: 'Bank',
        type_2: 'Alipay',
        type_3: 'WeChat',
        status_completed: 'Completed',
        status_processing: 'Processing',
        no_data: 'No withdrawal data',
        time_error: 'Start time cannot be greater than end time',
        start_time: 'Start Time',
        end_time: 'End Time',
        view: 'View',
        name: 'Name',
        phone: 'Phone',
        status: 'Status',
        time: 'Time'
      }
    },

    fee: {
      operation_tips: 'Operation Tips',
      renew_tip: 'You can apply for renewal within 30 days before shop expiration',
      payment_tip: 'Please verify the official payment account and contact customer service after uploading payment proof',
      entry_fee: 'Entry Fee',
      entry_fee_amount: 'Entry Fee (CNY)',
      deposit_amount: 'Deposit (CNY)',
      expiry_date: 'Expiry Date',
      apply_renew: 'Apply Renewal',
      renew_record: 'Renewal Records',
      payment_amount: 'Payment Amount (CNY)',
      fee_type: 'Fee Type',
      create_time: 'Create Time',
      no_entry_fee_data: 'No entry fee data available'
    }
  },

  renew: {
    apply: {
      shop_name: 'Shop Name',
      shop_package: 'Shop Package',
      main_industry: 'Main Industry',
      entry_duration: 'Entry Duration',
      select_duration: 'Please Select Duration',
      service_fee: 'Service Fee',
      total: 'Total',
      payment_voucher: 'Payment Voucher',
      voucher_desc: 'Voucher Description',
      voucher_desc_placeholder: 'Please enter voucher description',
      receiving_account: 'Receiving Account Info',
      bank_account_name: 'Bank Account Name',
      bank_account: 'Bank Account',
      bank_name: 'Bank Name',
      bank_address: 'Bank Address',
      submit: 'Submit',
      upload_success: 'Upload Success',
      select_duration_tip: 'Please select entry duration',
      upload_voucher_tip: 'Please upload payment voucher',
      renew_success: 'Renewal application successful'
    }
  },

  statistics: {
    goods: {
      real_time_overview: 'Real-time Overview',
      new_goods: 'New Goods',
      goods_views: 'Goods Views',
      goods_favorites: 'Goods Favorites',
      order_goods_piece: 'Order Goods(Piece)',
      item: 'Item',
      real_time_today: 'Real-time Today',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      goods_order_count: 'Goods Order Count',
      goods_collect_count: 'Goods Collection Count',
      goods_view_count: 'Goods View Count'
    },

    shop: {
      realtime_overview: 'Real-time Overview',
      new_goods: 'New Goods (items)',
      goods_views: 'Goods Views',
      goods_favorites: 'Goods Favorites',
      order_goods: 'Order Goods',
      shop_favorites: 'Shop Favorites',
      order_amount_tip: 'Order Amount (¥)',
      order_count: 'Order Count',

      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      new_goods_count: 'New Goods Count',
      goods_view_count: 'Goods View Count',
      goods_collect_count: 'Goods Collection Count',
      order_goods_count: 'Order Goods Count',
      shop_collect_count: 'Shop Collection Count',
      order_amount: 'Order Amount',
      order_count: 'Order Count',
      unit_piece: 'pcs',
      unit_item: 'items',
      unit_shop: 'shops',
      unit_currency: 'CNY',
      unit_order: 'orders'
    },

    transaction: {
      transaction_overview: 'Transaction Overview',
      order_amount: 'Order Amount(¥)',
      order_count: 'Order Count',
      goods_count: 'Goods Count',
      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      order_amount_text: 'Order Amount',
      order_count_text: 'Order Count',
      goods_count_text: 'Goods Count',
      unit_yuan: '¥',
      unit_count: 'order',
      unit_piece: 'item'
    },

    visit: {
      visit_overview: 'Visit Overview',
      shop_collect: 'Shop Collection',
      goods_collect: 'Goods Collection',
      goods_browse: 'Goods Browse',
      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      shop_collect_count: 'Shop Collection Count',
      goods_collect_count: 'Goods Collection Count',
      goods_browse_count: 'Goods Browse Count'
    }
  },

  verify: {
    verification_records: 'Verification Records',
    click_to_scan_verification_code: 'Click this area to scan the verification code',
    input_verification_code: 'Enter Verification Code',
    please_enter_verification_code: 'Please enter the verification code',
    submit_verification_code: 'Submit Verification Code',
    verify_usage: 'Verify Usage',
    h5_not_support_scan: 'H5 does not support scanning verification codes',
    please_scan_mini_program_qr_code: 'Please scan the mini program QR code',

    records: {
      placeholder_verifier_name: "Please enter the verifier's name",
      filter: 'Filter',
      verifier_name: 'Verifier Name',
      verification_type: 'Verification Type',
      verification_time: 'Verification Time',
      start_time: 'Start Time',
      end_time: 'End Time',
      verification_code: 'Verification Code',
      placeholder_verification_code: 'Please enter the verification code',
      reset: 'Reset',
      confirm: 'Confirm',
      copy: 'Copy',
      verified: 'Verified',
      not_verified: 'Not Verified',
      verifier: 'Verifier',
      creation_time: 'Creation Time',
      verification_time: 'Verification Time',
      no_verification_data: 'No verification data available',

      all: 'All',
      pickup: 'Order Pickup',
      virtual_goods: 'Virtual Goods',
      start_time_error: 'Start time cannot be greater than end time',
      end_time_error: 'End time cannot be less than start time'
    },

    user_edit: {
      verifier_name: 'Verifier Name',
      enter_verifier_name: 'Please enter verifier name',
      associate_member: 'Associate Member',
      enter_member_info: 'Please enter member name or mobile',
      username: 'Username',
      mobile: 'Mobile',
      associate_member_tip: 'After associating a member, you can use the verification function on mobile, otherwise verification is not available on mobile',
      save: 'Save',
      edit_verifier: 'Edit Verifier',
      add_verifier: 'Add Verifier',
      verifier_name_required: 'Verifier name cannot be empty',
      member_required: 'Associated member cannot be empty'
    },

    user: {
      enter_verifier_name: 'Enter verifier name',
      verifier: 'Verifier',
      verifier_label: 'Verifier: ',
      edit: 'Edit',
      delete: 'Delete',
      member_account: 'Member Account: ',
      create_time: 'Create Time: ',
      no_verify_data: 'No verification data',
      operation_tips: 'Operation Tips',
      confirm_delete_verifier: 'Are you sure to delete this verifier?'
    }
  }
}
