export default {
  // 底部选项卡
  tabBar: {
    home: 'index',
    category: 'category',
    cart: 'cart',
    member: 'member'
  },
  //公共
  common: {
    //语言包名称
    'zh-cn': 'Chinese',
    'en-us': 'English',
    mescrollTextInOffset: 'pull to refresh',
    mescrollTextOutOffset: 'Loading...',
    mescrollEmpty: 'No data available',
    goodsRecommendTitle: 'Guess you like',
    currencySymbol: '¥',
    tips: 'Tips',
    yuan: 'CNY',
    confirm: 'Confirm',
    copy: 'Copy'
  },

  lang: 'Language',

  goods: {
    edit: {
      edit_goods: 'Edit Goods',
      add_goods: 'Add Goods',
      goods_not_exist: 'Goods do not exist',
      please_select_first_category: 'Please select the first category',
      please_select_second_category: 'Please select the second category',
      please_select_third_category: 'Please select the third category',
      please_upload_goods_image: 'Please upload goods image',
      please_enter_validity: 'Please enter validity',
      validity_format_error: 'Validity format error',
      please_enter_sale_price: 'Please enter sale price',
      sale_price_format_error: 'Sale price format error',
      strikethrough_price_format_error: 'Strikethrough price format error',
      cost_price_format_error: 'Cost price format error',
      weight_format_error: 'Weight format error',
      volume_format_error: 'Volume format error',
      please_edit_spec_info: 'Please edit specification information',
      please_enter_stock: 'Please enter stock',
      stock_format_error: 'Stock format error',
      stock_warning_format_error: 'Stock warning format error',
      stock_warning_not_equal_stock: 'Stock warning cannot equal stock quantity',
      stock_warning_exceed_stock: 'Stock warning cannot exceed stock quantity',
      please_select_shipping_template: 'Please select a shipping template',
      please_fill_goods_details: 'Please fill in goods details',
      purchase_limit_format_error: 'Purchase limit format error',
      purchase_limit_cannot_be_less_than: 'Purchase limit cannot be less than',
      starting_quantity_format_error: 'Starting quantity format error',
      starting_quantity_cannot_be_less_than: 'Starting quantity cannot be less than',
      starting_quantity_cannot_exceed_purchase_limit: 'Starting quantity cannot exceed purchase limit',
      please_do_not_select_repeatedly: 'Please do not select repeatedly'
    },

    album: {
      take_photo: 'Take Photo',
      confirm: 'Confirm'
    },

    list: {
      enter_goods_name: 'Enter product name',
      add_goods: 'Add product',
      all: 'All',
      filter: 'Filter',
      stock: 'Stock',
      sales: 'Sales',
      edit: 'Edit',
      off_shelf: 'Off shelf',
      on_shelf: 'On shelf',
      copy: 'Copy',
      delete: 'Delete',
      reason: 'Reason',
      inventory_management: 'Inventory management',
      no_goods_data: 'No product data',
      goods_name: 'Product name',
      min_sales: 'Minimum sales',
      max_sales: 'Maximum sales',
      goods_type: 'Product type',
      marketing_activity: 'Marketing activity',
      reset: 'Reset',
      confirm: 'Confirm',
      on_sale: 'On Sale',
      in_warehouse: 'In Warehouse',
      pending_review: 'Pending Review',
      review_failed: 'Review Failed',
      illegal_off_shelf: 'Illegal Off Shelf',
      confirm_delete: 'After deletion, it will enter the recycle bin. Are you sure to delete?',
      confirm_copy: 'Copying the product will be stored in the warehouse, are you sure to copy?',
      no_violation_info: 'No violation information',
      violation_reason: 'Violation Reason',
      physical_goods: 'Physical Goods',
      virtual_goods: 'Virtual Goods',
      copied_to_warehouse: 'Product has been placed in the warehouse',
      min_sales_cannot_exceed_max_sales: 'Minimum sales cannot exceed maximum sales'
    },

    output: {
      specification: 'Specification',
      sale_price: 'Sale Price',
      currency: 'Yuan',
      stock: 'Stock',
      placeholder_stock: '0',
      unit: 'Piece',
      save: 'Save',
      enter_stock: 'Please enter the stock for specification {index}',
      invalid_stock_format: 'Invalid stock format for specification {index}'
    }
  },

  index: {
    error_message: 'Error: {message}',
    sales_amount: 'Sales Amount',
    order_count: 'Order Count',
    shop_expiring: 'The shop is about to expire, please renew as soon as possible',
    shop_paused: 'The shop has been suspended and cannot operate normally',
    shop_expired: 'The shop has expired, please renew as soon as possible',
    shop_remaining_days: 'The shop has {days} days remaining until expiration',
    expired: '(Expired)',
    certify_now: 'Certify Now',
    renew_now: 'Renew Now',
    seven_days: '7 Days',
    fifteen_days: '15 Days',
    thirty_days: '30 Days',
    currency_unit: 'Yuan',
    order_unit: 'Orders',
    share_title: 'Multi-Merchant Mobile Merchant',
    not_certified: 'Not Certified',
    certified: 'Certified',
    main_industry: 'Main Industry',
    shop_status: 'Shop Status',
    normal: 'Normal',
    closed: 'Closed',
    expiry_date: 'Expiry Date',
    permanent: 'Permanent',
    data_overview: 'Data Overview',
    today: 'Today',
    yesterday: 'Yesterday',
    total: 'Total',
    collect_shop: 'Shop Collections',
    pending_payment: 'Pending Payment',
    pending_shipment: 'Pending Shipment',
    refunding: 'Refunding',
    pending_review: 'Pending Review',
    illegal_removal: 'Illegal Removal',
    product_release: 'Product Release',
    order_query: 'Order Query',
    financial_status: 'Financial Status',
    transaction_analysis: 'Transaction Analysis',
    shop_settlement: 'Shop Settlement',
    member_management: 'Member Management',
    contact_address: 'Contact Address',
    all: 'All',

    all_menu: {
      shop_management: 'Shop Management',
      publish_goods: 'Publish Goods',
      manage_goods: 'Manage Goods',
      manage_orders: 'Manage Orders',
      manage_members: 'Manage Members',
      financial_management: 'Financial Management',
      asset_overview: 'Asset Overview',
      withdrawal_records: 'Withdrawal Records',
      settlement_fees: 'Settlement Fees',
      shop_settlement: 'Shop Settlement',
      store_settlement: 'Store Settlement',
      statistics_analysis: 'Statistics Analysis',
      transaction_statistics: 'Transaction Statistics',
      shop_statistics: 'Shop Statistics',
      goods_statistics: 'Goods Statistics',
      visit_statistics: 'Visit Statistics',
      shop_settings: 'Shop Settings',
      shop_info: 'Shop Info',
      user_management: 'User Management',
      contact_address: 'Contact Address',
      platform_notice: 'Platform Notice',
      verification_desk: 'Verification Desk',
      verification_staff: 'Verification Staff'
    }
  },

  login: {
    login: {
      merchant_login: 'Merchant Login',
      enter_username: 'Please enter username',
      enter_password: 'Please enter password',
      enter_captcha: 'Please enter captcha',
      login_button: 'Login',
      not_partner: 'Not our partner yet?',
      apply_join: 'Apply to join'
    },
    modify_pwd: {
      old_password: 'Old Password',
      new_password: 'New Password',
      confirm_password: 'Confirm Password',
      enter_old_password: 'Please enter old password',
      enter_new_password: 'Please enter new password',
      enter_confirm_password: 'Please enter confirm password',
      save_button: 'Save',
      password_mismatch: 'Passwords do not match'
    }
  },

  apply: {
    agreement: {
      sign_agreement: 'Sign the Entry Agreement',
      agree_terms: 'I have read and agree to the above agreement',
      next_step: 'Next step, fill in the application information',
      agree_first: 'Please agree to the agreement first'
    }
  },

  index: {
    shop_expiring_soon: 'The store is about to expire, please renew it as soon as possible',
    shop_suspended: 'The store has suspended service and cannot operate normally',
    shop_expired: 'The store has expired, please renew it as soon as possible',
    shop_remaining: 'Remaining store',
    days_to_expire: 'days to expire',
    expired: 'Expired',
    certify_now: 'Authenticate now',
    renew_now: 'Renew now',
    not_certified: 'Not certified',
    certified: 'Certified',
    main_industry: 'Main industry:',
    shop_status: 'Store status:',
    normal: 'Normal',
    closed: 'Closed',
    expiration_time: 'Expiration time:',
    permanent: 'Permanent',
    data_overview: 'Data overview',
    today: 'Today',
    yesterday: 'Yesterday',
    total: 'Total',
    order_count: 'Order count',
    sales_amount: 'Sales amount (Yuan)',
    shop_favorites_count: 'Store favorites count',
    more: 'More',
    pending_payment: 'Pending payment',
    pending_shipment: 'Pending shipment',
    refunding: 'Refunding',
    pending_review: 'Pending review',
    violation_delisting: 'Violation delisting',
    product_release: 'Product release',
    order_query: 'Order query',
    financial_status: 'Financial status',
    transaction_analysis: 'Transaction analysis',
    store_settlement: 'Store settlement',
    member_management: 'Member management',
    contact_address: 'Contact address',
    all: 'All',
    '7_days': '7 days',
    '15_days': '15 days',
    '30_days': '30 days',
    sales_amount: 'Sales Amount',
    order_count: 'Order Count',
    yuan: 'Yuan',
    pieces: 'Pieces',
    multi_merchant_mobile_app: 'Multi-Merchant Mobile App',

    all_menu: {
      store_management: 'Store Management',
      product_release: 'Product Release',
      product_management: 'Product Management',
      order_management: 'Order Management',
      member_management: 'Member Management',
      financial_management: 'Financial Management',
      asset_overview: 'Asset Overview',
      withdrawal_record: 'Withdrawal Record',
      settlement_fee: 'Settlement Fee',
      store_settlement: 'Store Settlement',
      statistical_analysis: 'Statistical Analysis',
      transaction_statistics: 'Transaction Statistics',
      store_statistics: 'Store Statistics',
      product_statistics: 'Product Statistics',
      visit_statistics: 'Visit Statistics',
      store_settings: 'Store Settings',
      store_information: 'Store Information',
      user_management: 'User Management',
      contact_address: 'Contact Address',
      platform_announcements: 'Platform Announcements',
      verification_platform: 'Verification Platform',
      verification_personnel: 'Verification Personnel'
    }
  },

  member: {
    coupon: {
      min_use_amount: 'Available for orders over {amount}',
      send_coupon: 'Send Coupon',
      send_success: 'Coupon sent successfully',
      validity_period: 'Valid until: ',
      valid_days: 'Valid for {days} days after receiving',
      no_data: 'No coupon data'
    },

    detail: {
      phone: 'Phone',
      email: 'Email',
      follow_status: 'Follow Status',
      followed: 'Followed',
      unfollowed: 'Unfollowed',
      follow_time: 'Follow Time',
      order_no: 'Order No.',
      order_time: 'Order Time',
      transaction_info: 'Transaction Information',
      no_order_data: 'No order data'
    },

    list: {
      search_placeholder: 'Enter nickname / phone / email',
      email: 'Email',
      shop_follow: 'Shop Follow',
      followed: 'Followed',
      unfollowed: 'Unfollowed',
      view_detail: 'View Details',
      send_coupon: 'Send Coupon',
      no_member_data: 'No member data'
    }
  },

  my: {
    contact: {
      select_location: 'Please select a location',
      end_time_error: 'End time cannot be earlier than start time',
      start_time_error: 'Start time cannot be later than end time',
      data_error: 'Data error',
      auth_location: 'Authorize current location?',
      auth_location_content: 'We need to access your location. Please confirm authorization, otherwise the map function will not be available.',
      auth_success: 'Authorization successful',
      auth_failed: 'Authorization failed',
      name_required: 'Contact name cannot be empty',
      mobile_required: 'Mobile number cannot be empty',
      mobile_invalid: 'Please enter a valid mobile number',
      monday: 'Monday',
      tuesday: 'Tuesday',
      wednesday: 'Wednesday',
      thursday: 'Thursday',
      friday: 'Friday',
      saturday: 'Saturday',
      sunday: 'Sunday'
    },

    my: {
      storeInfo: 'Store Information',
      contactAddress: 'Contact Address',
      userManagement: 'User Management',
      changePassword: 'Change Password',
      storeSettlement: 'Store Settlement',
      shopSettlement: 'Shop Settlement',
      withdrawalRecords: 'Withdrawal Records',
      verifier: 'Verifier',
      switchLanguage: 'Switch Language',
      logout: 'Logout',
      confirmLogout: 'Are you sure you want to log out of the current account?',
      cancel: 'Cancel',
      confirm: 'Confirm'
    },

    config: {
      storePackage: 'Store Package',
      mainIndustry: 'Main Industry',
      storeName: 'Store Name',
      storeLogo: 'Store Logo',
      logoImageSize: 'Recommended image size: 200*60',
      storeAvatar: 'Store Avatar',
      avatarImageSize: 'Recommended image size: 800*800 pixels',
      storeBanner: 'Store Banner',
      bannerImageHeight: 'Recommended image height: 150 pixels',
      storeDescription: 'Store Description',
      enterStoreDescription: 'Please enter store description',
      storeKeywords: 'Store Keywords',
      enterStoreKeywords: 'Please enter store keywords, separated by commas',
      keywordsSeparator: "Separate multiple keywords with English ','",
      save: 'Save'
    },

    contact: {
      name: 'Contact Name',
      'name.placeholder': 'Please enter contact name',
      mobile: 'Contact Mobile',
      'mobile.placeholder': 'Please enter contact mobile',
      phone: 'Contact Phone',
      'phone.placeholder': 'Please enter contact phone',
      address: 'Contact Address',
      'address.region': 'Please select province, city, and district',
      'address.detail': 'Detailed Address',
      'address.detail.placeholder': 'Please enter detailed address',
      qq: 'QQ Number',
      'qq.placeholder': 'Please enter QQ number',
      alibaba: 'Ali Wang Wang',
      'alibaba.placeholder': 'Please enter Ali Wang Wang',
      email: 'Email',
      'email.placeholder': 'Please enter email',
      days: 'Business Days',
      'days.selected': 'Selected',
      'days.placeholder': 'Please select business days',
      hours: 'Business Hours',
      'hours.start': 'Start Time',
      'hours.end': 'End Time',
      'days.select': 'Select Business Days',
      confirm: 'Confirm'
    },

    user: {
      'username.prompt': 'Please enter username',
      add: 'Add User',
      'username.label': 'Username: ',
      normal: 'Normal',
      locking: 'Locking',
      'lastLoginIP.label': 'Last Login IP: ',
      'lastLoginTime.label': 'Last Login Time: ',
      edit: 'Edit',
      resetPassword: 'Reset Password',
      delete: 'Delete',
      newPassword: 'New Password',
      'newPassword.label': 'Please enter new password',
      confirmNewPassword: 'Confirm New Password',
      'confirmNewPassword.label': 'Please enter confirm new password',
      cancel: 'Cancel',
      confirm: 'Confirm',
      noUserData: 'No user data',

      'edit.username': 'Username',
      'edit.username.placeholder': 'Please enter username',
      'edit.password': 'Password',
      'edit.password.placeholder': 'Please enter password',
      'edit.password.confirm': 'Confirm Password',
      'edit.password.confirm.placeholder': 'Please confirm password',
      'edit.userGroup': 'User Group',
      'edit.userGroup.placeholder': 'Please select user group',
      'edit.userStatus': 'User Status'
    }
  },

  notice: {
    detail: {
      publish_time: 'Published at',
      notice_prefix: 'Notice'
    },

    list: {
      top: 'Top',
      empty: 'No announcements',
      share_title: 'Announcements'
    }
  },

  order: {
    detail: {
      basis: {
        auto_receive: 'Remaining',
        auto_receive_time: 'Auto receive',
        shipping_address: 'Shipping Address: ',
        copy: 'Copy',
        order_info: 'Order Information',
        order_number: 'Order Number: ',
        order_type: 'Order Type: ',
        order_source: 'Order Source: ',
        payment_method: 'Payment Method: ',
        buyer: 'Buyer: ',
        delivery_method: 'Delivery Method: ',
        marketing_activity: 'Marketing Activity: ',
        buyer_message: 'Buyer Message: ',
        create_time: 'Create Time: ',
        close_time: 'Close Time: ',
        payment_time: 'Payment Time: ',
        seller_note: 'Seller Note: ',
        invoice_info: 'Invoice Information',
        invoice_type: 'Invoice Type: ',
        invoice_title: 'Invoice Title: ',
        title_type: 'Title Type: ',
        taxpayer_number: 'Taxpayer Number: ',
        invoice_content: 'Invoice Content: ',
        mailing_address: 'Mailing Address: ',
        receiving_email: 'Receiving Email: ',
        invoice_cost: 'Invoice Cost',
        invoice_fee: 'Invoice Fee: ',
        invoice_tax_rate: 'Invoice Tax Rate: ',
        shipping_fee: 'Shipping Fee: ',
        settlement_info: 'Settlement Information',
        shop_settlement: 'Shop Settlement Amount: ',
        platform_settlement: 'Platform Settlement Amount: ',
        settlement_status: 'Settlement Status: ',
        shop_refund: 'Shop Refund Amount: ',
        platform_refund: 'Platform Refund Amount: ',
        platform_coupon_amount: 'Platform Coupon Amount: ',
        platform_coupon_refund: 'Platform Coupon Refund Amount: ',
        total_commission: 'Total Commission: ',
        goods_amount: 'Goods Amount',
        shop_coupon: 'Shop Coupon',
        shop_discount: 'Shop Discount',
        order_adjustment: 'Order Adjustment',
        shipping: 'Shipping',
        platform_coupon: 'Platform Coupon',
        balance_used: 'Balance Used',
        total_items: 'Total',
        items: 'items, Total: ',
        order_log: 'Order Log',
        operation: 'Operation: ',
        operator: 'Operator: ',
        operation_port: 'Operation Port: ',
        order_status: 'Order Status: ',
        reminder: 'Reminder',
        reminder_text_1: 'After successful transaction, the platform will settle the payment to your shop account balance, you can apply for withdrawal',
        reminder_text_2: 'Please pay attention to the status of your packages to ensure delivery to buyers',
        reminder_text_3: 'If the buyer indicates non-receipt or issues with goods, please contact them promptly for friendly resolution',
        note: 'Note',
        view_logistics: 'View Logistics',
        offline_payment: 'Offline Payment',
        settled: 'Settled',
        pending_settlement: 'Pending Settlement',
        paper: 'Paper',
        electronic: 'Electronic',
        special: 'Special VAT',
        general: 'General',
        personal: 'Personal',
        enterprise: 'Enterprise',
        gift: 'Gift'
      },

      local: {
        shipping_address: 'Shipping Address: ',
        copy: 'Copy',
        order_info: 'Order Information',
        order_no: 'Order No.: ',
        order_type: 'Order Type: ',
        order_source: 'Order Source: ',
        payment_method: 'Payment Method: ',
        buyer: 'Buyer: ',
        delivery_method: 'Delivery Method: ',
        buyer_message: 'Buyer Message: ',
        create_time: 'Create Time: ',
        close_time: 'Close Time: ',
        payment_time: 'Payment Time: ',
        seller_note: 'Seller Note: ',
        delivery_info: 'Delivery Information',
        delivery_staff: 'Delivery Staff: ',
        contact: 'Contact: ',
        delivery_time: 'Delivery Time: ',
        invoice_info: 'Invoice Information',
        settlement_info: 'Settlement Information',
        order_amount: 'Order Amount',
        order_log: 'Order Log',
        reminder: 'Reminder',
        note: 'Note',
        offline_payment: 'Offline Payment',
        gift: 'Gift',
        goods_amount: 'Goods Amount',
        shop_coupon: 'Shop Coupon',
        shop_discount: 'Shop Discount',
        order_adjustment: 'Order Adjustment',
        shipping_fee: 'Shipping Fee',
        platform_coupon: 'Platform Coupon',
        balance_used: 'Balance Used',
        total_items: 'Total',
        items: 'items',
        total: 'Total',
        shop_settlement: 'Shop Settlement Amount',
        platform_settlement: 'Platform Settlement Amount',
        settlement_status: 'Settlement Status',
        settled: 'Settled',
        pending_settlement: 'Pending Settlement',
        shop_refund: 'Shop Refund Amount',
        platform_refund: 'Platform Refund Amount',
        platform_coupon_amount: 'Platform Coupon Amount',
        platform_coupon_refund: 'Platform Coupon Refund Amount',
        total_commission: 'Total Commission',
        operation: 'Operation',
        operator: 'Operator',
        operation_port: 'Operation Port',
        order_status: 'Order Status',
        reminder_title: 'Reminder',
        reminder_settlement: 'After successful transaction, the platform will settle the payment to your shop account balance for withdrawal',
        reminder_delivery: 'Please pay attention to the package status to ensure delivery to the buyer',
        reminder_issue: 'If the buyer reports non-receipt or issues with goods, please contact them promptly for resolution',
        invoice_type: 'Invoice Type: ',
        paper_invoice: 'Paper',
        electronic_invoice: 'Electronic',
        special_invoice: 'Special VAT',
        general_invoice: 'General',
        invoice_title: 'Invoice Title: ',
        title_type: 'Title Type: ',
        personal: 'Personal',
        enterprise: 'Enterprise',
        taxpayer_id: 'Taxpayer ID: ',
        invoice_content: 'Invoice Content: ',
        mailing_address: 'Mailing Address: ',
        receiving_email: 'Receiving Email: ',
        invoice_expense: 'Invoice Expense',
        invoice_amount: 'Invoice Amount: ',
        invoice_tax_rate: 'Invoice Tax Rate: ',
        mailing_fee: 'Mailing Fee: '
      },

      store: {
        shipping_address: 'Shipping Address',
        order_info: 'Order Information',
        order_number: 'Order Number',
        copy: 'Copy',
        order_type: 'Order Type',
        order_source: 'Order Source',
        payment_method: 'Payment Method',
        buyer: 'Buyer',
        delivery_method: 'Delivery Method',
        delivery_store: 'Delivery Store',
        store_address: 'Store Address',
        business_hours: 'Business Hours',
        contact_phone: 'Contact Phone',
        buyer_message: 'Buyer Message',
        create_time: 'Create Time',
        close_time: 'Close Time',
        payment_time: 'Payment Time',
        seller_note: 'Seller Note',
        invoice_info: 'Invoice Information',
        invoice_type: 'Invoice Type',
        invoice_title: 'Invoice Title',
        title_type: 'Title Type',
        taxpayer_number: 'Taxpayer Number',
        invoice_content: 'Invoice Content',
        mailing_address: 'Mailing Address',
        receiving_email: 'Receiving Email',
        invoice_fee: 'Invoice Fee',
        invoice_tax_rate: 'Invoice Tax Rate',
        mailing_fee: 'Mailing Fee',
        settlement_info: 'Settlement Information',
        store_settlement: 'Store Settlement Amount',
        platform_settlement: 'Platform Settlement Amount',
        settlement_status: 'Settlement Status',
        store_refund: 'Store Refund Amount',
        platform_refund: 'Platform Refund Amount',
        platform_coupon_amount: 'Platform Coupon Amount',
        platform_coupon_refund: 'Platform Coupon Refund Amount',
        total_commission: 'Total Commission',
        goods_amount: 'Goods Amount',
        store_coupon: 'Store Coupon',
        store_discount: 'Store Discount',
        order_adjustment: 'Order Adjustment',
        shipping_fee: 'Shipping Fee',
        platform_coupon: 'Platform Coupon',
        balance_payment: 'Balance Payment',
        total_items: 'Total',
        items: 'items',
        total: 'Total',
        order_log: 'Order Log',
        operation: 'Operation',
        operator: 'Operator',
        operation_port: 'Operation Port',
        order_status: 'Order Status',
        reminder: 'Reminder',
        reminder_text_1: 'After successful transaction, the platform will settle the payment to your store account balance, you can apply for withdrawal',
        reminder_text_2: 'Please pay attention to the status of your packages to ensure delivery to buyers',
        reminder_text_3: 'If the buyer indicates non-receipt or issues with goods, please contact them promptly for friendly resolution',
        note: 'Note',
        offline_payment: 'Offline Payment',
        pickup: 'Pickup',
        settled: 'Settled',
        pending_settlement: 'Pending Settlement',
        paper: 'Paper',
        electronic: 'Electronic',
        special: 'Special VAT',
        general: 'General',
        personal: 'Personal',
        company: 'Company'
      },

      virtual: {
        order_info: 'Order Information',
        order_number: 'Order Number',
        copy: 'Copy',
        order_type: 'Order Type',
        order_source: 'Order Source',
        payment_method: 'Payment Method',
        buyer: 'Buyer',
        mobile: 'Mobile',
        delivery_method: 'Delivery Method',
        buyer_message: 'Buyer Message',
        create_time: 'Create Time',
        close_time: 'Close Time',
        payment_time: 'Payment Time',
        seller_note: 'Seller Note',
        invoice_info: 'Invoice Information',
        invoice_type: 'Invoice Type',
        invoice_title: 'Invoice Title',
        title_type: 'Title Type',
        taxpayer_number: 'Taxpayer Number',
        invoice_content: 'Invoice Content',
        mailing_address: 'Mailing Address',
        receiving_email: 'Receiving Email',
        invoice_cost: 'Invoice Cost',
        invoice_tax_rate: 'Invoice Tax Rate',
        mailing_cost: 'Mailing Cost',
        settlement_info: 'Settlement Information',
        shop_settlement: 'Shop Settlement Amount',
        platform_settlement: 'Platform Settlement Amount',
        settlement_status: 'Settlement Status',
        shop_refund: 'Shop Refund Amount',
        platform_refund: 'Platform Refund Amount',
        platform_coupon_amount: 'Platform Coupon Amount',
        platform_coupon_refund: 'Platform Coupon Amount (Refund Part)',
        total_commission: 'Total Commission',
        goods_amount: 'Goods Amount',
        shop_coupon: 'Shop Coupon',
        shop_discount: 'Shop Discount',
        order_adjustment: 'Order Adjustment',
        shipping_fee: 'Shipping Fee',
        platform_coupon: 'Platform Coupon',
        balance_payment: 'Balance Payment',
        total_items: 'Total',
        items: 'items',
        total: 'Total',
        order_log: 'Order Log',
        operation: 'Operation',
        operator: 'Operator',
        operation_port: 'Operation Port',
        order_status: 'Order Status',
        reminder: 'Reminder',
        reminder_text_1: 'After successful transaction, the platform will settle the payment to your store account balance, you can apply for withdrawal',
        reminder_text_2: 'Please pay attention to the status of your packages to ensure delivery to buyers',
        reminder_text_3: 'If the buyer indicates non-receipt or issues with goods, please contact them promptly for friendly resolution',
        note: 'Note',
        offline_payment: 'Offline Payment',
        paper: 'Paper',
        electronic: 'Electronic',
        special: 'Special VAT',
        general: 'General',
        personal: 'Personal',
        company: 'Company',
        settled: 'Settled',
        pending_settlement: 'Pending Settlement',
        gift: 'Gift'
      }
    },

    refund: {
      agree: {
        refund_type: 'Refund Type',
        refund_only: 'Refund Only',
        refund_with_goods: 'Refund with Return',
        refund_amount: 'Refund Amount',
        including_shipping: '(Including shipping fee {money})',
        online_payment_notice: "Note: For orders paid online, after merchant approval, the refund will be automatically returned to the buyer's payment account.",
        confirm_refund: 'Confirm Refund'
      },

      detail: {
        order_info: 'Order Information',
        order_type: 'Order Type',
        order_no: 'Order Number',
        refund_no: 'Refund Number',
        buyer: 'Buyer',
        copy: 'Copy',
        refund_info: 'Refund Information',
        applicant: 'Applicant',
        reminder: 'Reminder',
        reminder_text1: 'If not shipped, please click agree to refund to buyer',
        reminder_text2: 'If actually shipped, please contact the buyer proactively',
        reminder_text3: 'After a full refund, coupons and balance will be returned to the buyer'
      },

      list: {
        order_list: 'Order List',
        refund_rights: 'Refund & Rights',
        enter_goods_name: 'Please enter goods name',
        filter: 'Filter',
        goods_name: 'Goods Name',
        order_number: 'Order Number',
        refund_number: 'Refund Number',
        enter_order_number: 'Please enter order number',
        enter_refund_number: 'Please enter refund number',
        reset: 'Reset',
        confirm: 'Confirm',
        filter_text: 'Filter',
        apply_time: 'Apply Time',
        last_7_days: 'Last 7 Days',
        last_30_days: 'Last 30 Days',
        start_time: 'Start Time',
        end_time: 'End Time',
        refund_status: 'Refund Status',
        all: 'All',
        refund_type: 'Refund Type',
        refund_only: 'Refund Only',
        refund_and_return: 'Refund & Return',
        refund_no_prefix: 'Refund No.: ',
        order_no_prefix: 'Order No.: ',
        apply_time_prefix: 'Apply Time: ',
        order_amount: 'Order Amount: ',
        refund_amount: 'Refund Amount: ',
        no_data: 'No order data',

        start_time_error: 'Start time cannot be greater than end time',
        end_time_error: 'End time cannot be less than start time',
        all: 'All',
        settled: 'Settled',
        unsettled: 'Unsettled',

        start_time_error: 'Start time cannot be greater than end time',
        end_time_error: 'End time cannot be less than start time'
      },

      refuse: {
        refund_type: 'Refund Type',
        refund_only: 'Refund Only',
        refund_and_return: 'Refund with Return',
        refund_amount: 'Refund Amount',
        include_shipping: '(Including shipping fee {money})',
        refuse_reason: 'Refuse Reason',
        reason_placeholder: 'Please enter your refuse reason',
        tips: 'Note: It is recommended to negotiate with the buyer before deciding whether to refuse the refund. After you refuse the refund, the buyer can modify the refund application agreement and initiate a refund again.',
        cancel: 'Cancel',
        confirm: 'Confirm Refuse',
        reason_required: 'Please enter refuse reason'
      },

      take: {
        refund_type: 'Refund Type',
        refund_only: 'Refund Only',
        refund_and_return: 'Return & Refund',
        refund_amount: 'Refund Amount',
        include_shipping: '(Including shipping fee {money})',
        return_address: 'Return Address',
        is_stock: 'Add to Stock',
        yes: 'Yes',
        no: 'No',
        tips: "Note: The buyer can only return the goods after you agree to the refund application. After the buyer returns the goods, you need to confirm receipt again, and the refund will be automatically returned to the buyer's payment account.",
        cancel: 'Cancel',
        confirm: 'Confirm Receipt'
      },

      transfer: {
        refund_method: 'Refund Method',
        refund_only: 'Refund Only',
        refund_and_return: 'Return and Refund',
        refund_amount: 'Refund Amount',
        including_shipping: '(Including shipping fee {money})',
        confirm_notice: "Note: After confirming the transfer, the refund will be automatically returned to the buyer's payment account.",
        cancel: 'Cancel',
        confirm_transfer: 'Confirm Transfer'
      },

      action: {
        processing: 'Processing...',
        operation_tip: 'Operation Tips',
        extend_delivery_confirm: 'Are you sure you want to extend the delivery time for this order?\nEach extension will delay the automatic receipt time by three days',

        no_contact_address: 'Merchant has not set contact address'
      }
    },

    address: {
      receiver: 'Receiver',
      please_enter_receiver: 'Please enter receiver name',
      mobile_number: 'Mobile Number',
      please_enter_mobile: 'Please enter mobile number',
      shipping_address: 'Shipping Address',
      please_select: 'Please select',
      please_select_region: 'Please select province/city/district',
      detailed_address: 'Detailed Address',
      please_enter_address: 'Please enter detailed address',
      confirm: 'Confirm',
      data_error: 'Data error',
      location_auth_title: 'Location Authorization',
      location_auth_content: 'We need to access your location. Please authorize to use the map function',
      auth_success: 'Authorization successful',
      auth_failed: 'Authorization failed',
      please_enter_name: 'Please enter name',
      please_enter_valid_mobile: 'Please enter valid mobile number',
      please_select_area: 'Please select province/city/district',
      address_required: 'Detailed address is required'
    },

    adjust: {
      adjust_price_tips: 'Note: Price adjustment is only supported when the order is unpaid. After adjustment, please contact the buyer to refresh and verify the order amount before payment.',
      goods_info: 'Product Information',
      order_info: 'Order Information',
      subtotal: 'Subtotal',
      goods_total: 'Product Total',
      discount: 'Discount',
      coupon: 'Coupon',
      platform_coupon: 'Platform Coupon',
      balance: 'Balance',
      invoice_fee: 'Invoice Fee',
      invoice_delivery: 'Invoice Delivery',
      total: 'Total',
      adjust_price: 'Adjust Price',
      adjust_amount: 'Adjustment Amount',
      shipping_fee: 'Shipping Fee',
      actual_goods_amount: 'Actual Product Amount',
      discount_amount: 'Discount Amount',
      coupon_amount: 'Coupon Amount',
      platform_coupon_amount: 'Platform Coupon Amount',
      price_adjustment: 'Price Adjustment',
      invoice_rate: 'Invoice Rate',
      actual_payment: 'Actual Payment',
      invoice_delivery_fee: 'Invoice Delivery Fee',
      please_enter_adjust_amount: 'Please enter adjustment amount',
      adjust_amount_format_error: 'Invalid adjustment amount format',
      please_enter_shipping_fee: 'Please enter shipping fee',
      shipping_fee_format_error: 'Invalid shipping fee format'
    },

    delivery: {
      select_delivery_goods: 'Select Delivery Goods',
      tracking_number: 'Tracking Number',
      handle_refund: 'Handle Refund',
      fill_logistics_info: 'Fill Logistics Information',
      shipping_address: 'Shipping Address',
      delivery_method: 'Delivery Method',
      logistics_delivery: 'Logistics Delivery',
      no_logistics_needed: 'No Logistics Needed',
      logistics_company: 'Logistics Company',
      select_logistics_company: 'Please select logistics company',
      enter_tracking_number: 'Please enter tracking number',
      delivery_success: 'Delivery Successful'
    },

    logistics: {
      logistics_info: 'Fill in Logistics Information',
      shipping_address: 'Shipping Address',
      delivery_method: 'Delivery Method',
      logistics_delivery: 'Logistics Delivery',
      no_logistics: 'No Logistics Required',
      logistics_company: 'Logistics Company',
      select_logistics_company: 'Please Select Logistics Company',
      tracking_number: 'Tracking Number',
      enter_tracking_number: 'Please Enter Tracking Number',
      please_select_logistics_company: 'Please select logistics company',
      please_enter_tracking_number: 'Please enter tracking number',
      order_not_exist: 'Order information does not exist'
    },

    list: {
      orderList: 'Order List',
      refundAndRights: 'Refund & Rights',
      pleaseEnter: 'Please Enter',
      all: 'All',
      filter: 'Filter',
      searchMethod: 'Search Method',
      orderTime: 'Order Time',
      last7Days: 'Last 7 Days',
      last30Days: 'Last 30 Days',
      startTime: 'Start Time',
      endTime: 'End Time',
      orderType: 'Order Type',
      orderStatus: 'Order Status',
      marketingType: 'Marketing Type',
      paymentMethod: 'Payment Method',
      orderSource: 'Order Source',
      settlementStatus: 'Settlement Status',
      reset: 'Reset',
      confirm: 'Confirm',
      orderTime: 'Order Time',
      total: 'Total',
      sellerNote: 'Seller Note',
      remark: 'Remark',
      offlinePayment: 'Offline Payment',
      pickup: 'Pick Up',
      gift: 'Gift',
      noOrderData: 'No Order Data'
    },

    local: {
      delivery_address: 'Delivery Address',
      delivery_method: 'Delivery Method',
      merchant_self_delivery: 'Merchant Self-Delivery',
      deliverer: 'Deliverer',
      please_enter_deliverer: 'Please enter deliverer',
      phone_number: 'Phone Number',
      please_enter_phone: 'Please enter phone number'
    },

    logistics: {
      delivery_time: 'Delivery Time',
      carrier_company: 'Carrier Company',
      tracking_number: 'Tracking Number',
      edit_logistics: 'Edit Logistics',
      no_order_info: 'Order information not found!'
    }
  },

  property: {
    dashboard: {
      account_overview: 'Account Overview',
      shop_total_income: 'Shop Total Income(¥)',
      available_balance: 'Available Balance(¥)',
      withdraw: 'Withdraw',
      pending_settlement: 'Pending Settlement(¥)',
      view_details: 'View Details',
      entry_fee: 'Entry Fee(¥)',
      shop_deposit: 'Shop Deposit(¥)',
      withdrawn: 'Withdrawn(¥)',
      withdrawal_records: 'Withdrawal Records',
      withdrawing: 'Withdrawing(¥)',
      all: 'All',
      income: 'Income',
      expense: 'Expense',
      start_time: 'Start Time',
      end_time: 'End Time',
      income_source: 'Source',
      amount: 'Amount(¥)',
      transaction_type: 'Type',
      time: 'Time',
      description: 'Description',
      no_account_data: 'No Account Data',
      start_time_error: 'Start time cannot be greater than end time',

      orderlist: {
        transaction_amount: 'Transaction Amount',
        pending_settlement: 'Pending Settlement',
        in_progress: 'In Progress',
        settled: 'Settled',
        start_time: 'Start Time',
        end_time: 'End Time',
        order_status: 'Order Status:',
        order_amount: 'Order Amount',
        shop_refund_amount: 'Shop Refund Amount',
        platform_commission: 'Platform Commission',
        shop_amount: 'Shop Amount',
        completion_time: 'Completion Time',
        no_order_data: 'No Order Data',
        pending_settlement_orders: 'Pending Settlement Orders',
        in_progress_orders: 'In Progress Orders',
        settled_orders: 'Settled Orders',
        start_time_greater: 'Start time cannot be greater than end time'
      }
    },

    reopen: {
      detail: {
        shop_name: 'Shop Name',
        shop_package: 'Shop Package',
        renewal_duration: 'Renewal Duration',
        year: 'Year',
        payment_proof: 'Payment Proof',
        payment_proof_desc: 'Payment Proof Description'
      },

      list: {
        operation_tips: 'Operation Tips',
        expire_notice: 'Shop renewal can be applied within 30 days before expiration',
        payment_notice: 'Please verify the official payment account and contact customer service after uploading payment proof',
        main_business: 'Main Business',
        expire_time: 'Expiration Time',
        permanent: 'Permanent',
        view: 'View',
        renew_duration: 'Renewal Duration (Years)',
        payment_amount: 'Payment Amount (¥)',
        payment_proof: 'Payment Proof',
        status: 'Status',
        pending_review: 'Pending Review',
        review_failed: 'Review Failed',
        review_success: 'Review Success',
        time: 'Time',
        delete: 'Delete',
        edit: 'Edit',
        no_data: 'No renewal data',
        confirm_delete: 'Are you sure to delete this renewal application record?'
      }
    },

    settlement: {
      detail_store: {
        operation_tips: 'Operation Tips',
        account_period: 'Account Period',
        to: 'to',
        online_settlement: 'Online Settlement Amount',
        shop_total: 'Shop Total Amount',
        refund_amount: 'Refund Amount',
        commission_amount: 'Commission Amount',
        platform_coupon: 'Platform Coupon',
        platform_coupon_refund: 'Platform Coupon (Refund Part)',
        offline_settlement: 'Offline Settlement Amount',
        offline_order: 'Offline Order Amount',
        platform_deduction: 'Platform Deduction Amount',
        platform_total_deduction: 'Platform Total Deduction',
        platform_refund_deduction: 'Platform Refund Deduction',
        offline_payment: 'Offline Payment Amount',
        offline_refund: 'Offline Refund Amount',

        // List items
        payment_method: 'Payment Method',
        order_sales: 'Order Sales (¥)',
        order_refund: 'Order Refund (¥)',
        commission: 'Commission (¥)',
        platform_coupon_amount: 'Platform Coupon (¥)',
        platform_coupon_refund_amount: 'Platform Coupon Refund (¥)',
        store_income: 'Store Income (¥)',
        platform_commission: 'Platform Commission (¥)',
        order_complete_time: 'Order Complete Time',
        no_order_data: 'No Order Data'
      },

      detail: {
        operation_tips: 'Operation Tips',
        shop_income_formula: 'Shop Income = Total Settlement - Refund Amount - Commission + Platform Coupon Amount - Platform Refund Coupon Amount',
        platform_commission_formula: 'Platform Commission = Total Platform Commission - Platform Refund Commission',
        shop_settlement: 'Shop Settlement',
        shop_income_amount: 'Shop Income Amount',
        shop_total_settlement: 'Total Settlement Amount',
        shop_refund_amount: 'Shop Refund Amount',
        commission_amount: 'Commission Amount',
        platform_commission_amount: 'Platform Commission Amount',
        platform_total_commission: 'Total Platform Commission',
        platform_refund_commission: 'Platform Refund Commission',
        platform_coupon_amount: 'Platform Coupon Amount',
        platform_refund_coupon_amount: 'Platform Refund Coupon Amount',
        order_sales: 'Order Sales (¥)',
        order_refund: 'Order Refund (¥)',
        commission: 'Commission (¥)',
        platform_coupon: 'Platform Coupon (¥)',
        platform_refund_coupon: 'Platform Refund Coupon (¥)',
        shop_income: 'Shop Income (¥)',
        platform_commission: 'Platform Commission (¥)',
        order_complete_time: 'Order Complete Time',
        no_settlement_data: 'No settlement data available'
      },

      operationTip: 'Operation Tip',
      pageDescription: 'This page displays the settlement operations for all stores of the merchant.',
      detailsDescription: 'Merchants can view settlement details and operations here.',
      startTime: 'Start Time',
      endTime: 'End Time',
      view: 'View',
      storeSettlement: 'Store Settlement',
      totalOrderAmount: 'Total Order Amount',
      onlineSettlementAmount: 'Online Settlement Amount',
      offlineSettlementAmount: 'Offline Settlement Amount',
      settlementStartTime: 'Settlement Start Time',
      settlementEndTime: 'Settlement End Time',
      isSettled: 'Is Settled',
      settled: 'Settled',
      unsettled: 'Unsettled',
      settle: 'Settle',
      noSettlementData: 'No settlement data available for stores.',
      settlementRemarks: 'Settlement Remarks',
      remarksPlaceholder: 'Please enter settlement remarks',
      cancel: 'Cancel',
      confirm: 'Confirm',
      timeValidation: 'Start time cannot be greater than end time',

      operationTip: 'After the platform sets the store settlement cycle, the system will settle regularly according to the settings.',
      cycleDescription:
        'Settlement cycles are divided into daily, weekly, and monthly. Daily means starting at 0:00 every day, weekly means starting at 0:00 every Monday, and monthly means starting at 0:00 on the first day of each month.',
      storeAmount: 'Store Amount',
      platformCommission: 'Platform Commission',
      commissionAmount: 'Commission Amount',
      billingStartTime: 'Billing Start Time',
      billingEndTime: 'Billing End Time',
      noData: 'No store settlement data available.'
    },

    withdraw: {
      detail: {
        store_name: 'Store Name',
        contact_person: 'Contact Person',
        contact_phone: 'Contact Phone',
        account_type: 'Account Type',
        bank: 'Bank',
        wechat: 'WeChat',
        alipay: 'Alipay',
        account_name: 'Account Name',
        withdraw_account: 'Withdrawal Account',
        account_holder: 'Account Holder',
        wechat_nickname: 'WeChat Nickname',
        wechat_id: 'WeChat ID',
        alipay_username: 'Alipay Username',
        alipay_account: 'Alipay Account',
        withdraw_amount: 'Withdrawal Amount',
        yuan: 'Yuan',
        status: 'Status',
        pending_review: 'Pending Review',
        pending_transfer: 'Pending Transfer',
        transferred: 'Transferred',
        rejected: 'Rejected',
        apply_time: 'Application Time',
        transfer_time: 'Transfer Time',
        transfer_voucher: 'Transfer Voucher',
        voucher_description: 'Voucher Description',
        none: 'None',
        is_settlement_period: 'Settlement Period',
        yes: 'Yes',
        no: 'No',
        period_name: 'Period Name',
        remark: 'Remark'
      },

      index: {
        account_type: 'Withdrawal Account Type',
        bank_card: 'Bank Card',
        bank_account_name: 'Bank Account Name',
        bank_account_number: 'Bank Account Number',
        bank_branch_name: 'Bank Branch Name',
        bank_location: 'Bank Location',
        wechat: 'WeChat',
        wechat_nickname: 'WeChat Nickname',
        wechat_account: 'WeChat Account',
        alipay: 'Alipay',
        alipay_username: 'Alipay Username',
        alipay_account: 'Alipay Account',
        amount: 'Withdrawal Amount:',
        available_balance: 'Available Balance:',
        min_amount: 'Minimum Withdrawal:',
        max_amount: 'Maximum Withdrawal:',
        submit: 'Withdraw',
        please_enter_amount: 'Please enter withdrawal amount',
        exceed_available: 'Withdrawal amount exceeds available balance',
        less_than_min: 'Withdrawal amount is less than minimum',
        exceed_max: 'Withdrawal amount exceeds maximum limit',
        apply_success: 'Application successful, pending review'
      },

      list: {
        amount: 'Withdrawal Amount',
        withdrawn: 'Withdrawn (¥)',
        processing: 'Processing (¥)',
        apply: 'Apply',
        amount_yuan: 'Amount (¥)',
        account_type: 'Account Type',
        type_1: 'Bank',
        type_2: 'Alipay',
        type_3: 'WeChat',
        status_completed: 'Completed',
        status_processing: 'Processing',
        no_data: 'No withdrawal data',
        time_error: 'Start time cannot be greater than end time',
        start_time: 'Start Time',
        end_time: 'End Time',
        view: 'View',
        name: 'Name',
        phone: 'Phone',
        status: 'Status',
        time: 'Time'
      }
    },

    fee: {
      operation_tips: 'Operation Tips',
      renew_tip: 'You can apply for renewal within 30 days before shop expiration',
      payment_tip: 'Please verify the official payment account and contact customer service after uploading payment proof',
      entry_fee: 'Entry Fee',
      entry_fee_amount: 'Entry Fee (CNY)',
      deposit_amount: 'Deposit (CNY)',
      expiry_date: 'Expiry Date',
      apply_renew: 'Apply Renewal',
      renew_record: 'Renewal Records',
      payment_amount: 'Payment Amount (CNY)',
      fee_type: 'Fee Type',
      create_time: 'Create Time',
      no_entry_fee_data: 'No entry fee data available'
    }
  },

  renew: {
    apply: {
      shop_name: 'Shop Name',
      shop_package: 'Shop Package',
      main_industry: 'Main Industry',
      entry_duration: 'Entry Duration',
      select_duration: 'Please Select Duration',
      service_fee: 'Service Fee',
      total: 'Total',
      payment_voucher: 'Payment Voucher',
      voucher_desc: 'Voucher Description',
      voucher_desc_placeholder: 'Please enter voucher description',
      receiving_account: 'Receiving Account Info',
      bank_account_name: 'Bank Account Name',
      bank_account: 'Bank Account',
      bank_name: 'Bank Name',
      bank_address: 'Bank Address',
      submit: 'Submit',
      upload_success: 'Upload Success',
      select_duration_tip: 'Please select entry duration',
      upload_voucher_tip: 'Please upload payment voucher',
      renew_success: 'Renewal application successful'
    }
  },

  statistics: {
    goods: {
      real_time_overview: 'Real-time Overview',
      new_goods: 'New Goods',
      goods_views: 'Goods Views',
      goods_favorites: 'Goods Favorites',
      order_goods_piece: 'Order Goods(Piece)',
      item: 'Item',
      real_time_today: 'Real-time Today',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      goods_order_count: 'Goods Order Count',
      goods_collect_count: 'Goods Collection Count',
      goods_view_count: 'Goods View Count'
    },

    shop: {
      realtime_overview: 'Real-time Overview',
      new_goods: 'New Goods (items)',
      goods_views: 'Goods Views',
      goods_favorites: 'Goods Favorites',
      order_goods: 'Order Goods',
      shop_favorites: 'Shop Favorites',
      order_amount_tip: 'Order Amount (¥)',
      order_count: 'Order Count',

      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      new_goods_count: 'New Goods Count',
      goods_view_count: 'Goods View Count',
      goods_collect_count: 'Goods Collection Count',
      order_goods_count: 'Order Goods Count',
      shop_collect_count: 'Shop Collection Count',
      order_amount: 'Order Amount',
      order_count: 'Order Count',
      unit_piece: 'pcs',
      unit_item: 'items',
      unit_shop: 'shops',
      unit_currency: 'CNY',
      unit_order: 'orders'
    },

    transaction: {
      transaction_overview: 'Transaction Overview',
      order_amount: 'Order Amount(¥)',
      order_count: 'Order Count',
      goods_count: 'Goods Count',
      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      order_amount_text: 'Order Amount',
      order_count_text: 'Order Count',
      goods_count_text: 'Goods Count',
      unit_yuan: '¥',
      unit_count: 'order',
      unit_piece: 'item'
    },

    visit: {
      visit_overview: 'Visit Overview',
      shop_collect: 'Shop Collection',
      goods_collect: 'Goods Collection',
      goods_browse: 'Goods Browse',
      today_realtime: 'Today Real-time',
      last_7_days: 'Last 7 Days',
      last_30_days: 'Last 30 Days',
      shop_collect_count: 'Shop Collection Count',
      goods_collect_count: 'Goods Collection Count',
      goods_browse_count: 'Goods Browse Count'
    }
  },

  verify: {
    verification_records: 'Verification Records',
    click_to_scan_verification_code: 'Click this area to scan the verification code',
    input_verification_code: 'Enter Verification Code',
    please_enter_verification_code: 'Please enter the verification code',
    submit_verification_code: 'Submit Verification Code',
    verify_usage: 'Verify Usage',
    h5_not_support_scan: 'H5 does not support scanning verification codes',
    please_scan_mini_program_qr_code: 'Please scan the mini program QR code',

    records: {
      placeholder_verifier_name: "Please enter the verifier's name",
      filter: 'Filter',
      verifier_name: 'Verifier Name',
      verification_type: 'Verification Type',
      verification_time: 'Verification Time',
      start_time: 'Start Time',
      end_time: 'End Time',
      verification_code: 'Verification Code',
      placeholder_verification_code: 'Please enter the verification code',
      reset: 'Reset',
      confirm: 'Confirm',
      copy: 'Copy',
      verified: 'Verified',
      not_verified: 'Not Verified',
      verifier: 'Verifier',
      creation_time: 'Creation Time',
      verification_time: 'Verification Time',
      no_verification_data: 'No verification data available',

      all: 'All',
      pickup: 'Order Pickup',
      virtual_goods: 'Virtual Goods',
      start_time_error: 'Start time cannot be greater than end time',
      end_time_error: 'End time cannot be less than start time'
    },

    user_edit: {
      verifier_name: 'Verifier Name',
      enter_verifier_name: 'Please enter verifier name',
      associate_member: 'Associate Member',
      enter_member_info: 'Please enter member name or mobile',
      username: 'Username',
      mobile: 'Mobile',
      associate_member_tip: 'After associating a member, you can use the verification function on mobile, otherwise verification is not available on mobile',
      save: 'Save',
      edit_verifier: 'Edit Verifier',
      add_verifier: 'Add Verifier',
      verifier_name_required: 'Verifier name cannot be empty',
      member_required: 'Associated member cannot be empty'
    },

    user: {
      enter_verifier_name: 'Enter verifier name',
      verifier: 'Verifier',
      verifier_label: 'Verifier: ',
      edit: 'Edit',
      delete: 'Delete',
      member_account: 'Member Account: ',
      create_time: 'Create Time: ',
      no_verify_data: 'No verification data',
      operation_tips: 'Operation Tips',
      confirm_delete_verifier: 'Are you sure to delete this verifier?'
    }
  }
}
